//////////////////////////////////////////////////////////////////////////
//                  SHOPS API helpers
// Here we handle all requests related to the Shops API END POINT 
// Usage: 
// var shopsApiHelper       = require(DEFS.DIR.API_HELPER_SHOPS);
// var shopsApiHelperObj    = new shopsApiHelper();
//////////////////////////////////////////////////////////////////////////

// Connect to the database
var dbConnect = require(DEFS.DIR.DB_CONNECT)('openshift');
var sp        = require(DEFS.DIR.DB_SP);

var shops = function() {
  // Fetch the shops details from DB using the provided location ID

  //format for call back: callback(returnMsg,returnData);
  this.getShopsByLocationId = function(req, res, locationId, callback) {

    var returnData = {};
    var returnMsg;

    //Get the USP 
    var getShops = new sp('usp_get_shops_by_location');
    getShops.add(locationId, false);

    dbConnect.query(getShops.call(), function(err, rows) {
      if(err || !rows) {
        SCUBE_LOG.info('DB Error while fetching all the shops ' + err);
        returnMsg = 'failure'
        callback(returnMsg, null);
        return;
      }

      /* Data format received (multiple rows)
      [ 
       { 
           shop_id: 4, 
           shop_name: 'Adidas', 
           scubit_count: 0 
        },
        {  shop_id: 2, 
           shop_name: 'Nike', 
           scubit_count: 0 
        }
      ] 

      // Restructure the received db data into a key=value pair json object
      // for easy access by the requestor

      /* Restructured format
        {
          shops: [
           {
              shop_name: "Adidas",
              shop_id: 4,
              scubit_count: 13 
           },
           {
              shop_name: "Nike",
              shop_id: 2,
              scubit_count: 0
            }
          ]
        }*/

      // For output format refer :
      // https://sparkking.wikispaces.com/API+-+Shops+End+Points#QUERY_CASE_LOAD
      // Build jsonData for shops
      var jsonReqArray = {};
      jsonReqArray.reqtype = DEFS.CONST.JSON_TYPE['singleArrayMultipleObj'];
      jsonReqArray.reqData = rows;

      jsonReqArray.arrayName = 'shops'; 
      jsonReqArray.rowId = 'shop_id'; 
      jsonReqArray.imageName = 'shop_id'; // Mongo Db column name
      jsonReqArray.mongoTblName = DEFS.CONST.MONGO_DB_TBL_NAME_SHOPS_IMAGES;
      jsonReqArray.imageJson = 1; 

      jBuilder.buildDBDataJSON(jsonReqArray, function(jsonData) {
          // Send back the restructured data
        SCUBE_LOG.info('usp : usp_get_shops_by_location success');
        //SCUBE_LOG.info(jsonData);
        returnMsg = 'success';
        callback(returnMsg, jsonData);
        return;
      });
    });
  }

  // Format for call back: callback(returnMsg,returnData);
  // Fetch the shops details from DB using the provided location ID, shop name
  this.searchShopsByName = function(req, res, searchArray, callback) {

    var returnData = {};
    var returnMsg;

    // Get the USP 
    var searchShops = new sp('usp_search_shops_by_name');

    searchShops.add(searchArray.locId, false);

    // shopName is already in string format, hence sending false to lib
    searchShops.add(searchArray.shopName, true);

    dbConnect.query(searchShops.call(), function(err, rows) {
      if(err || !rows) {
        SCUBE_LOG.info('DB Error while fetching all the shops ' + err);
        returnMsg = 'failure'
        callback(returnMsg, null);
        return;
      }
      
      // For output format refer :
      // https://sparkking.wikispaces.com/API+-+Shops+End+Points#QUERY_CASE_SEARCH
      // Build jsonData for shops 
      var jsonReqArray = {};
      jsonReqArray.reqtype = DEFS.CONST.JSON_TYPE['singleArrayMultipleObj'];
      jsonReqArray.reqData = rows;

      jsonReqArray.arrayName = 'shops';
      jsonReqArray.rowId = 'shop_profile_id'; 
      jsonReqArray.imageName = 'shop_profile_id'; // Mongo Db column name
      jsonReqArray.mongoTblName = DEFS.CONST.MONGO_DB_TBL_NAME_SHOP_PROFILE_IMAGES;
      jsonReqArray.imageJson = 1; 

      jBuilder.buildDBDataJSON(jsonReqArray, function(jsonData) {
          // Send back the restructured data
        SCUBE_LOG.info('usp : usp_search_shops_by_name success');
        //SCUBE_LOG.info(jsonData);
        returnMsg = 'success';
        callback(returnMsg, jsonData);
        return;
      });
    });
  }

  // Format for call back: callback(returnMsg,returnData);
  // Fetch the shops details from DB using the provided Mall ID
  this.getShopsByMallId = function(req, res, mallId, callback) {

    var returnData = {};
    var returnMsg;

    // Get the USP 
    var getShops  = new sp('usp_get_shops_by_mall');

    getShops.add(mallId, false);

    dbConnect.query(getShops.call(), function(err, rows) {
      if(err || !rows) {
        SCUBE_LOG.info('DB Error '+ err +' while fetching all '
                          + ' the shops for the mall id' + mallId);
        returnMsg = 'failure';
        callback(returnMsg, null);
        return;
      }

      // For output format refer :
      // https://sparkking.wikispaces.com/API+-+Shops+End+Points#QUERY_CASE_BY_MALL_ID
      // Build jsonData for shops 
      var jsonReqArray = {};
      jsonReqArray.reqtype = DEFS.CONST.JSON_TYPE['singleArrayMultipleObj'];
      jsonReqArray.reqData = rows;

      jsonReqArray.arrayName = 'shops';
      jsonReqArray.rowId = 'shop_profile_id'; 
      jsonReqArray.imageName = 'shop_profile_id'; // Mongo Db column name
      jsonReqArray.mongoTblName = DEFS.CONST.MONGO_DB_TBL_NAME_SHOP_PROFILE_IMAGES;
      jsonReqArray.imageJson = 1; 

      jBuilder.buildDBDataJSON(jsonReqArray, function(jsonData) {
          // Send back the restructured data
        SCUBE_LOG.info('usp : usp_get_shops_by_mall success');
        //SCUBE_LOG.info(jsonData);
        returnMsg = 'success';
        callback(returnMsg, jsonData);
        return;
      });
    });
  }

  // Format for call back: callback(returnMsg,returnData);
  // Fetch the shops details from DB using the provided Brand ID
  // & location id
  this.getShopsByBrandId = function(req, res, searchArray, callback) {

    var returnData = {};
    var returnMsg;

    // Get the USP 
    var getShops  = new sp('usp_get_shops_by_brand');

    getShops.add(searchArray.locId, false);
    getShops.add(searchArray.brandId, false);
 
    dbConnect.query(getShops.call(), function(err, rows) {
      if(err || !rows) {
        SCUBE_LOG.info('DB Error '+ err +' while fetching all '
                          + ' the shops for the brand id' + searchArray.brandId);
        returnMsg = 'failure';
        callback(returnMsg, null);
        return;
      }

      // For output format refer :
      // https://sparkking.wikispaces.com/API+-+Shops+End+Points#QUERY_CASE_BY_BRAND_ID
      // Build jsonData for shops 
      var jsonReqArray = {};
      jsonReqArray.reqtype = DEFS.CONST.JSON_TYPE['singleArrayMultipleObj'];
      jsonReqArray.reqData = rows;

      jsonReqArray.arrayName = 'shops';
      jsonReqArray.rowId = 'shop_profile_id'; 
      jsonReqArray.imageName = 'shop_profile_id'; // Mongo Db column name
      jsonReqArray.mongoTblName = DEFS.CONST.MONGO_DB_TBL_NAME_SHOP_PROFILE_IMAGES;
      jsonReqArray.imageJson = 1; 

      jBuilder.buildDBDataJSON(jsonReqArray, function(jsonData) {
          // Send back the restructured data
        SCUBE_LOG.info('usp : usp_get_shops_by_brand success');
        //SCUBE_LOG.info(jsonData);
        returnMsg = 'success';
        callback(returnMsg, jsonData);
        return;
      });
    });
  }

  // Format for call back: callback(returnMsg,returnData);
  // Fetch the shops details from DB using the provided Brand ID
  // & location id
  this.getShopsByShopName = function(req, res, searchArray, callback) {

    var returnData = {};
    var returnMsg;

    // Get the USP 
    var getShops  = new sp('usp_get_shops_by_name');

    getShops.add(searchArray.locId, false);
    getShops.add(searchArray.shopId, false);
 
    dbConnect.query(getShops.call(), function(err, rows) {
      if(err || !rows) {
        SCUBE_LOG.info('DB Error '+ err +' while fetching all '
                          + ' the shops for the shop id' + searchArray.shopId);
        returnMsg = 'failure';
        callback(returnMsg, null);
        return;
      }

      // For output format refer :
      // https://sparkking.wikispaces.com/API+-+Shops+End+Points#QUERY_CASE_BY_SHOP_NAME
      // Build jsonData for shop
      var jsonReqArray = {};
      jsonReqArray.reqtype = DEFS.CONST.JSON_TYPE['singleArrayMultipleObj'];
      jsonReqArray.reqData = rows;

      jsonReqArray.arrayName = 'shops';
      jsonReqArray.rowId = 'shop_profile_id'; 
      jsonReqArray.imageName = 'shop_profile_id'; // Mongo Db column name
      jsonReqArray.mongoTblName = DEFS.CONST.MONGO_DB_TBL_NAME_SHOP_PROFILE_IMAGES;
      jsonReqArray.imageJson = 1; 

      jBuilder.buildDBDataJSON(jsonReqArray, function(jsonData) {
          // Send back the restructured data
        SCUBE_LOG.info('usp : usp_get_shops_by_name success');
        //SCUBE_LOG.info(jsonData);
        returnMsg = 'success';
        callback(returnMsg, jsonData);
        return;
      });
    });
  }

  //format for call back: callback(returnMsg,returnData);
  this.getAllShopsByMallId = function(req, res, mallId,  callback) {

    var returnData = {};
    var returnMsg;

    //Get the USP 
    var getAllShops = new sp('usp_get_all_shops');
    getAllShops.add(mallId, false);

    dbConnect.query(getAllShops.call(), function(err, rows) {
      if(err || !rows) {
        SCUBE_LOG.info('DB Error : ' + err + ' while fetching all the Brands ');
        returnMsg = 'failure'
        callback(returnMsg, null);
        return;
    }
      // For output format refer :
      // https://sparkking.wikispaces.com/API+-+Shops+End+Points#QUERY_CASE_BY_GET_ALL_SHOPS_BY_MALL
      // Build jsonData for shops 
      var jsonReqArray = {};
      jsonReqArray.reqtype = DEFS.CONST.JSON_TYPE['singleArrayMultipleObj'];
      jsonReqArray.reqData = rows;

      jsonReqArray.arrayName = 'shops'; 

      jBuilder.buildDBDataJSON(jsonReqArray, function(jsonData) {
          // Send back the restructured data
        SCUBE_LOG.info('usp : usp_get_all_shops success');
        //SCUBE_LOG.info(jsonData);
        returnMsg = 'success';
        callback(returnMsg, jsonData);
        return;
      });
    });
  }
}
module.exports = shops;
