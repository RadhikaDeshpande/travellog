//////////////////////////////////////////////////////////////////////////
//                  Scubits Get API helpers
// Here we handle all requests related to the SCUBITS API END POINT 
// Usage: 
// var scubitsGetApiHelper     = require(DEFS.DIR.API_HELPER_GET_SCUBITS);
// var scubitsGetApiHelperObj  = new scubitsApiHelper();
//////////////////////////////////////////////////////////////////////////

// Connect to the database
var dbConnect = require(DEFS.DIR.DB_CONNECT)('openshift');
var sp        = require(DEFS.DIR.DB_SP);

var scubits = function() {
  
  // format for call back: callback(returnMsg, returnData);
  // Fetch the scubits details from DB using the provided shop profile ID
  this.getScubitsByShopProfile = function(shopProfileId, userId, callback) {

    var returnData = {};
    var returnMsg;

    //Get the USP 
    var getScubits = new sp('usp_get_scubits_by_shop');
    getScubits.add(shopProfileId, false);
    getScubits.add(userId,false);

    dbConnect.query(getScubits.call(), function(err, rows) {
      if(err || !rows) {
        SCUBE_LOG.info('DB Error : ' + err + 'while fetching Scubits' 
        				+ 'for shopProfileId' + shopProfileId);
        returnMsg = 'failure'
        callback(returnMsg, null);
        return;
      }

      // For Output format refer : 
      // https://sparkking.wikispaces.com/Scubits+GET+API+End+Points#QUERY_CASE_BY_SHOP_PROFILE

      // Build jsonData for scubits 
      var jsonReqArray = {};
      jsonReqArray.reqtype = DEFS.CONST.JSON_TYPE['singleArrayMultipleObj'];
      jsonReqArray.reqData = rows;
      // FIXME - For other json types the arrays name can be multipe
      // need to add a generic request array builder
      jsonReqArray.arrayName = 'scubits'; 
 
      jBuilder.buildDBDataJSON(jsonReqArray, function(jsonData) {
          // Send back the restructured data
        SCUBE_LOG.info('usp : usp_get_scubits_by_shop success');
        //SCUBE_LOG.info(jsonData);
        returnMsg = 'success';
        callback(returnMsg, jsonData);
        return;
      });
    });
  }

   // format for call back: callback(returnMsg, returnData);
   // Fetch the scubits details from DB using the provided user ID
  this.getScubitsByUser = function(userId, callback) {

  	var returnData = {};
    var returnMsg;

    //Get the USP 
    var getScubits = new sp('usp_get_scubits_by_user');
    getScubits.add(userId,false);

    dbConnect.query(getScubits.call(), function(err, rows) {
      if(err || !rows) {
        SCUBE_LOG.info('DB Error : ' + err + 'while fetching Scubits' 
        				+ 'for userId' + userId);
        returnMsg = 'failure'
        callback(returnMsg, null);
        return;
      }

      // For Output format refer : 
      // https://sparkking.wikispaces.com/Scubits+GET+API+End+Points#QUERY_CASE_BY_USER

      // Build jsonData for scubits 
      var jsonReqArray = {};
      jsonReqArray.reqtype = DEFS.CONST.JSON_TYPE['singleArrayMultipleObj'];
      jsonReqArray.reqData = rows;
      // FIXME - For other json types the arrays name can be multipe
      // need to add a generic request array builder
      jsonReqArray.arrayName = 'scubits'; 
 
      jBuilder.buildDBDataJSON(jsonReqArray, function(jsonData) {
          // Send back the restructured data
        SCUBE_LOG.info('usp : usp_get_scubits_by_shop success');
        //SCUBE_LOG.info(jsonData);
        returnMsg = 'success';
        callback(returnMsg, jsonData);
        return;
      });
    });
  }

  // format for call back: callback(returnMsg, returnData);
  // Fetch the scubits details from DB using the provided shop profile ID
  this.getScubeDealsByShopProfile = function(shopProfileId, callback) {

    var returnData = {};
    var returnMsg;

    //Get the USP 
    var getScubeDeals = new sp('usp_get_scube_deals_by_shop');
    getScubeDeals.add(shopProfileId, false);

    dbConnect.query(getScubeDeals.call(), function(err, rows) {
      if(err || !rows) {
        SCUBE_LOG.info('DB Error : ' + err + 'while fetching Scube Deals' 
                + 'for shopProfileId' + shopProfileId);
        returnMsg = 'failure'
        callback(returnMsg, null);
        return;
      }

      // For Output format refer : 
      // https://sparkking.wikispaces.com/Scubits+GET+API+End+Points#QUERY_CASE_BY_SHOP_PROFILE

      // Build jsonData for scubits 
      var jsonReqArray = {};
      jsonReqArray.reqtype = DEFS.CONST.JSON_TYPE['singleArrayMultipleObj'];
      jsonReqArray.reqData = rows;

      jsonReqArray.arrayName = 'scubedeals'; 
 
      jBuilder.buildDBDataJSON(jsonReqArray, function(jsonData) {
        // Send back the restructured data
        SCUBE_LOG.info('usp : usp_get_scube_deals_by_shop success');
        //SCUBE_LOG.info(jsonData);
        returnMsg = 'success';
        callback(returnMsg, jsonData);
        return;
      });
    });
  }
}
module.exports = scubits;
