//////////////////////////////////////////////////////////////////////////
//                  MALLS API helpers
// Here we handle all requests related to the MALLS API END POINT 
// Usage: 
// var mallsApiHelper       = require(DEFS.DIR.API_HELPER_MALLS);
// var mallsApiHelperObj    = new mallsApiHelper();
//////////////////////////////////////////////////////////////////////////

// Connect to the database
var dbConnect = require(DEFS.DIR.DB_CONNECT)('openshift');
var sp        = require(DEFS.DIR.DB_SP);

var malls = function() {
  
  //format for call back: callback(returnMsg,returnData);
  // Fetch the malls details from DB using the provided location ID
  this.getMallsByLocationId = function(req, res, locationId, callback) {

    var returnData = {};
    var returnMsg;

    //Get the USP 
    var getMalls = new sp('usp_get_malls_by_location');
    getMalls.add(locationId, false);

    dbConnect.query(getMalls.call(), function(err, rows) {
      if(err || !rows) {
        SCUBE_LOG.info('DB Error while fetching all the malls ' + err);
        returnMsg = 'failure'
        callback(returnMsg, null);
        return;
      }
      
      // For output format refer :
      // https://sparkking.wikispaces.com/API+-+Malls+End+Points#QUERY_CASE_LOAD
      // Build jsonData for malls 
      var jsonReqArray = {};
      jsonReqArray.reqtype = DEFS.CONST.JSON_TYPE['singleArrayMultipleObj'];
      jsonReqArray.reqData = rows;

      jsonReqArray.arrayName = 'malls'; 
      jsonReqArray.rowId = 'mall_id'; 
      jsonReqArray.imageName = 'mall_id'; // Mongo Db column name
      jsonReqArray.mongoTblName = DEFS.CONST.MONGO_DB_TBL_NAME_MALLS_IMAGES;
      jsonReqArray.imageJson = 1; 

      jBuilder.buildDBDataJSON(jsonReqArray, function(jsonData) {
          // Send back the restructured data
        SCUBE_LOG.info('usp : usp_get_malls_by_location success');
        //SCUBE_LOG.info(jsonData);
        returnMsg = 'success';
        callback(returnMsg, jsonData);
        return;
      });
    });
  }

  // Format for call back: callback(returnMsg,returnData);
  // Fetch the malls details from DB using the provided location ID, mall name
  this.searchMallsByName = function(req, res, searchArray, callback) {

    var returnData = {};
    var returnMsg;

    // Get the USP 
    var searchMalls = new sp('usp_search_malls_by_name');

    searchMalls.add(searchArray.locId, false);

    // mallName is already in string format, hence sending false to lib
    searchMalls.add(searchArray.mallName, true);

    dbConnect.query(searchMalls.call(), function(err, rows) {
      if(err || !rows) {
        SCUBE_LOG.info('DB Error while fetching all the malls ' + err);
        returnMsg = 'failure'
        callback(returnMsg, null);
        return;
      }
      // For output format refer :
      // https://sparkking.wikispaces.com/API+-+Malls+End+Points#QUERY_CASE_SEARCH
      // Build jsonData for malls 
      var jsonReqArray = {};
      jsonReqArray.reqtype = DEFS.CONST.JSON_TYPE['singleArrayMultipleObj'];
      jsonReqArray.reqData = rows;

      jsonReqArray.arrayName = 'malls';
      jsonReqArray.rowId = 'mall_id';
      jsonReqArray.imageName = 'mall_id'; // Mongo Db column name
      jsonReqArray.mongoTblName = DEFS.CONST.MONGO_DB_TBL_NAME_MALLS_IMAGES; 
      jsonReqArray.imageJson = 1; 

      jBuilder.buildDBDataJSON(jsonReqArray, function(jsonData) {
          // Send back the restructured data
        SCUBE_LOG.info('usp : usp_search_malls_by_name success');
        SCUBE_LOG.info(jsonData);
        returnMsg = 'success';
        callback(returnMsg, jsonData);
        return;
      });
    });
  }

  //format for call back: callback(returnMsg,returnData);
  this.getAllMallsByLocId = function(req, res, locId,  callback) {

    var returnData = {};
    var returnMsg;

    //Get the USP 
    var getAllMalls = new sp('usp_get_all_malls');
    getAllMalls.add(locId, false);

    dbConnect.query(getAllMalls.call(), function(err, rows) {
      if(err || !rows) {
        SCUBE_LOG.info('DB Error : ' + err + ' while fetching all the Brands ');
        returnMsg = 'failure'
        callback(returnMsg, null);
        return;
    }
      // For output format refer :
      // https://sparkking.wikispaces.com/API+-+Shops+End+Points#QUERY_CASE_BY_GET_ALL_SHOPS_BY_MALL
      // Build jsonData for malls 
      var jsonReqArray = {};
      jsonReqArray.reqtype = DEFS.CONST.JSON_TYPE['singleArrayMultipleObj'];
      jsonReqArray.reqData = rows;

      jsonReqArray.arrayName = 'malls'; 

      jBuilder.buildDBDataJSON(jsonReqArray, function(jsonData) {
          // Send back the restructured data
        SCUBE_LOG.info('usp : usp_get_all_malls success');
        //SCUBE_LOG.info(jsonData);
        returnMsg = 'success';
        callback(returnMsg, jsonData);
        return;
      });
    });
  }
}
module.exports = malls;
