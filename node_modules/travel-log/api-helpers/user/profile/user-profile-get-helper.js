//////////////////////////////////////////////////////////////////////////
//                  User Profile Get API helpers
// Here we handle all requests related to the users API END POINT 
// Usage: 
// var userProfileGetHelper     = require(DEFS.DIR.API_HELPER_USER_PROFILE_GET);
// var userProfileGetHelperObj  = new userProfileGetHelper();
//////////////////////////////////////////////////////////////////////////

// Connect to the database
var dbConnect = require(DEFS.DIR.DB_CONNECT)('openshift');
var sp        = require(DEFS.DIR.DB_SP);

var userProfile = function() {
  
  // format for call back: callback(returnMsg, returnData);
  // Fetch the user details from DB using the provided user ID
  this.getByUserId = function(userId, callback) {

    var returnData = {};
    var returnMsg;

    //Get the USP 
    var getUserProfile = new sp('usp_get_user_profile');
    getUserProfile.add(userId, false);

    dbConnect.query(getUserProfile.call(), function(err, rows) {
      if(err || !rows) {
        SCUBE_LOG.info('DB Error : ' + err + 'while fetching User' 
        				+ 'profile for user_id' + userId);
        returnMsg = 'failure'
        callback(returnMsg, null);
        return;
      }
      
      // For Output format refer : 
      // https://sparkking.wikispaces.com/API+-+User+Profile#ACTION_TYPE_GET

      // Build jsonData for user profile 
      var jsonReqArray = {};
      jsonReqArray.reqtype = DEFS.CONST.JSON_TYPE['singleArraySingleObj'];
      jsonReqArray.reqData = rows;
      jsonReqArray.arrayName = 'user'; 
 
      jBuilder.buildDBDataJSON(jsonReqArray, function(jsonData) {
          // Send back the restructured data
        SCUBE_LOG.info('usp : usp_get_user_profile success');
        SCUBE_LOG.info(jsonData);
        returnMsg = 'success';
        callback(returnMsg, jsonData);
        return;
      });
    });
  }

   this.getByQbUserId = function(qbUserId, callback) {

    var returnData = {};
    var returnMsg;

    //Get the USP 
    var getUserProfile = new sp('usp_get_user_profile_by_qbuser');
    getUserProfile.add(qbUserId, false);

    dbConnect.query(getUserProfile.call(), function(err, rows) {
      if(err || !rows) {
        SCUBE_LOG.info('DB Error : ' + err + 'while fetching User' 
                + 'profile for qbUserId' + qbUserId);
        returnMsg = 'failure'
        callback(returnMsg, null);
        return;
      }
      
      // For Output format refer : 
      // https://sparkking.wikispaces.com/API+-+User+Profile#ACTION_TYPE_GET

      // Build jsonData for user profile 
      var jsonReqArray = {};
      jsonReqArray.reqtype = DEFS.CONST.JSON_TYPE['singleArraySingleObj'];
      jsonReqArray.reqData = rows;
      jsonReqArray.arrayName = 'user'; 
 
      jBuilder.buildDBDataJSON(jsonReqArray, function(jsonData) {
          // Send back the restructured data
        SCUBE_LOG.info('usp : usp_get_user_profile_by_qbuser success');
        SCUBE_LOG.info(jsonData);
        returnMsg = 'success';
        callback(returnMsg, jsonData);
        return;
      });
    });
  }
}
module.exports = userProfile;
