//////////////////////////////////////////////////////////////////////////
//                  User Privacy Get API helpers
// Here we handle all requests related to the users API END POINT 
// Usage: 
// var userPrivacyGetHelper     = require(DEFS.DIR.API_HELPER_USER_PRIVACY_GET);
// var userPrivacyGetHelperObj  = new userPrivacyGetHelper();
//////////////////////////////////////////////////////////////////////////

// Connect to the database
var dbConnect = require(DEFS.DIR.DB_CONNECT)('openshift');
var sp        = require(DEFS.DIR.DB_SP);

var userPrivacy = function() {
  
  // format for call back: callback(returnMsg, returnData);
  // Fetch the user details from DB using the provided user ID
  this.getByUserId = function(userPrivacyArr, callback) {

    var returnData = {};
    var returnMsg;

    //Get the USP 
    var getUserPrivacySettings = new sp('usp_update_user_privacy_pref');
    getUserPrivacySettings.add(userPrivacyArr.user_id, false);
    getUserPrivacySettings.addOrAddNull(userPrivacyArr.email_pref_id, true);
    getUserPrivacySettings.add(DEFS.CONST.SP_OPCODE['get'], false); 

    dbConnect.query(getUserPrivacySettings.call(), function(err, rows) {
      if(err || !rows) {
        SCUBE_LOG.info('DB Error : ' + err + 'while fetching User' 
        				+ 'privacy for user_id' + userPrivacyArr.user_id);
        returnMsg = 'failure'
        callback(returnMsg, null);
        return;
      }
      
      // For Output format refer : 
      // https://sparkking.wikispaces.com/API+-+User+Privacy#QUERY_CASE_BY_USER_ID

      // Build jsonData for user profile 
      var jsonReqArray = {};
      jsonReqArray.reqtype = DEFS.CONST.JSON_TYPE['singleArraySingleObj'];
      jsonReqArray.reqData = rows;
      jsonReqArray.arrayName = 'user'; 
 
      jBuilder.buildDBDataJSON(jsonReqArray, function(jsonData) {
          // Send back the restructured data
        SCUBE_LOG.info('usp : usp_update_user_privacy_pref success');
        SCUBE_LOG.info(jsonData);
        returnMsg = 'success';
        callback(returnMsg, jsonData);
        return;
      });
    });
  }
}
module.exports = userPrivacy;
