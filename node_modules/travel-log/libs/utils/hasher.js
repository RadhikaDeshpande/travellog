//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// This Library has two functions: 
// 1) createHashedPassword. This takes in clear text password as input and returns the hashed password.
// 2) validatePassword. 	This takes in the hashed password from db as well as the clear text password from user.
// 							It returns true or false based on whether the two hash or not.
// Usage: 
// var hasher = require('sparkk-lib/hasher');
// var hash = new hasher();
// var hashedpwd = hash.createHashedPassword(password);
// var isValidPassword = hash.validatePassword(password, dbPwd);
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
var bcrypt   = require('bcrypt-nodejs');
var hasher = function() {
	// This function generates a salt and hashes it to create a hashed password which has the salt embedded in it
	this.createHashedPassword = function(password) {
		var salt = bcrypt.genSaltSync(10);
		var hashedPassword = bcrypt.hashSync(password, salt, null);
		return hashedPassword;
	}

	// This function compares the user provided password 
	this.validatePassword = function(password, dbPassword) {
		console.log("password = "+password+" dbPassword = "+dbPassword);
		var validOrNot = bcrypt.compareSync(password, dbPassword.toString());
		return validOrNot;
	}
};
module.exports = hasher;
